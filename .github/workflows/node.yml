on:
  workflow_call:
    inputs:
      range:
        description: "node.js semver range"
        required: true
        type: string
      type:
        description: 'majors or minors'
        default: majors
        required: false
        type: string
      command:
        description: '`run:` step'
        required: true
        type: string
      continue-on-error:
        description: 'whether to continue on error'
        default: false
        required: false
        type: boolean
      skip-ls-check:
        description: 'skip `npm ls`'
        default: false
        required: false
        type: boolean
      timeout-minutes:
        required: false
        type: number
        default: 30
      coverage:
        description: coverage provider
        required: false
        type: string
        default: codecov

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.set-matrix.outputs.requireds }}
      nonlatest: ${{ steps.set-matrix.outputs.optionals }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: ljharb/actions/node/matrix@main
        id: set-matrix
        with:
          versionsAsRoot: true
          type: ${{ inputs.type }}
          preset: ${{ inputs.range }}

  latest:
    needs: [matrix]
    name: 'latest minors'
    runs-on: ubuntu-latest
    continue-on-error: ${{ inputs.continue-on-error }}
    timeout-minutes: ${{ inputs.timeout-minutes }}

    strategy:
      fail-fast: false
      matrix:
        node-version: ${{ fromJson(needs.matrix.outputs.latest) }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@v3
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }} && npm install'
        with:
          node-version: ${{ matrix.node-version }}
          cache-node-modules-key: node_modules-${{ github.workflow }}-${{ github.action }}-${{ github.run_id }}
          skip-ls-check: ${{ inputs.skip-ls-check || startsWith(matrix.node-version, '0') && 'true' || 'false' }}
      - run: echo "PACKAGE_JSON=$(jq -c . < package.json)" >> $GITHUB_ENV
      - if: ${{ startsWith(fromJson(env.PACKAGE_JSON).name, '@') && startsWith(matrix.node-version, '0.') && ! startsWith(matrix.node-version, '0.1') }}
        run: eval $(node -e 'console.log(require("./package.json").scripts["${{ inputs.command }}".slice(8)])')
        env:
          PATH: "./node_modules/.bin/:${{ env.PATH }}"
      - run: ${{ inputs.command }}
        if: ${{ ! startsWith(fromJson(env.PACKAGE_JSON).name, '@') || ! startsWith(matrix.node-version, '0') || startsWith(matrix.node-version, '0.1') }}
      - uses: codecov/codecov-action@v3
        if: ${{ inputs.coverage == 'codecov' }}
      - uses: coverallsapp/github-action@v2
        if: ${{ inputs.coverage == 'coveralls' }}
        with:
          parallel: true
          flag-name: run ${{ join(matrix.*, ' - ') }}

  nonlatest:
    needs: [matrix, latest]
    name: 'non-latest minors'
    continue-on-error: true
    timeout-minutes: ${{ inputs.timeout-minutes }}
    if: ${{ needs.matrix.outputs.nonlatest != '[]' && (!github.head_ref || !startsWith(github.head_ref, 'renovate')) }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: ${{ fromJson(needs.matrix.outputs.nonlatest) }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@v3
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }} && npm install'
        with:
          node-version: ${{ matrix.node-version }}
          cache-node-modules-key: node_modules-${{ github.workflow }}-${{ github.action }}-${{ github.run_id }}
          skip-ls-check: true
      - run: echo "PACKAGE_JSON=$(jq -c . < package.json)" >> $GITHUB_ENV
      - if: ${{ startsWith(fromJson(env.PACKAGE_JSON).name, '@') && startsWith(matrix.node-version, '0.') && ! startsWith(matrix.node-version, '0.1') }}
        run: eval $(node -e 'console.log(require("./package.json").scripts["${{ inputs.command }}".slice(8)])')
        env:
          PATH: "./node_modules/.bin/:${{ env.PATH }}"
      - run: ${{ inputs.command }}
        if: ${{ ! startsWith(fromJson(env.PACKAGE_JSON).name, '@') || ! startsWith(matrix.node-version, '0') || startsWith(matrix.node-version, '0.1') }}

  node:
    name: node ${{ inputs.type }} @ ${{ inputs.range }}
    needs: [latest, nonlatest]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: coverallsapp/github-action@v2
        if: ${{ inputs.coverage == 'coveralls' }}
        with:
          parallel-finished: true
      - run: 'echo tests completed'
