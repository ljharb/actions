name: 'node CI: test `npm pack`'
description: 'install node and npm dependencies, run `npm pack`, and test things'
author: ljharb
inputs:
  build-command:
    description: build command to run once, prior to all the matrix steps
    required: false
    default: ''
    type: string
  skip-install:
    description: 'skip `npm install` step'
    default: false
    required: false
    type: boolean
  before_install:
    description: 'command to run before `npm install`'
    required: false
  after_install:
    description: 'command to run after `npm install`'
    required: false
  after_success:
    description: 'command to run after everything succeeds. default runs codecov'
    required: false
  skip-ls-check:
    description: 'skip the `npm ls` check (not recommended)'
    required: false
    default: false
    type: boolean
  skip-latest-npm:
    description: 'do not install the latest working npm version'
    required: false
    default: false
    type: boolean
  use-npm-ci:
    description: 'if true, will use `npm ci` instead of `npm install`'
    required: false
    default: false
    type: boolean
  working-directory:
    description: 'working directory for run steps'
    required: false
    default: '.'
    type: string

outputs:
  PATH:
    description: 'PATH env variable to use to have node/npm available'
runs:
  using: "composite"
  steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        disable-sudo: true
        egress-policy: audit
        allowed-endpoints: >
          github.com:443
          raw.githubusercontent.com:443
          nodejs.org:443
          iojs.org:443
          registry.npmjs.org:443
          actions-results-receiver-production.githubapp.com:443
    - uses: actions/checkout@v4
      with:
        show-progress: false
    - uses: ljharb/actions/node/install@main
      with:
        node-version: lts/*
        skip-install: ${{ inputs.skip-install }}
        before_install: cd ${{ inputs.working-directory }} ; ${{ inputs.before_install }}
        after_install: ${{ inputs.after_install }}
        after_success: ${{ inputs.after_success }}
        skip-ls-check: ${{ inputs.skip-ls-check }}
        skip-latest-npm: ${{ inputs.skip-latest-npm }}
        use-npm-ci: ${{ inputs.use-npm-ci }}
    - name: '`npm pack`'
      run: echo "tarball=$(npm pack)" >> $GITHUB_OUTPUT
      shell: bash
      id: pack
      working-directory: ${{ inputs.working-directory }}
    - name: list contents of valid tarball
      run: tar -ztf ${{ steps.pack.outputs.tarball }} | sed 's#^package/##g'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: extract tarball in situ
      run: tar -zxvf ${{ steps.pack.outputs.tarball }} --strip-components=1 -C . package
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - run: npm run tests-only
      shell: bash
      working-directory: ${{ inputs.working-directory }}
